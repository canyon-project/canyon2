{
  "data": "import {FlightBookBaseInfo, FlightBookPageInputParams, RequestStatus} from '../base/Model';
import {
  BOOK_PAGE_APPROVAL_PASSENGER,
  BOOK_PAGE_APPROVAL_UPDATE,
  BOOK_PAGE_POSTAPPROVAL_UPDATE,
  BOOK_PAGE_POSTPONE_UPDATE,
  BOOK_PAGE_SUBMIT,
  BOOK_PAGE_TRAVEL_UPDATE,
  FLIGHT_BOOK_BASE_INFO_MODEL,
  FLIGHT_BOOK_BASE_INPUT_MODEL,
} from '../common';
import {IApplicationItem, IPostApprovalTravelApplicationItem, ITravelRelatedData} from '../interface';
import {SubmitRankId} from '../submit';
import {
  BOOK_PAGE_NAME,
  BookingNonEmployeeEnum,
  FLIGHT_BOOK_DEV_LOG_TRACE_KEYS,
  FLIGHT_BOOK_SHARK,
  PRODUCT_LINE,
  PRODUCT_NAME,
  T_OR_F,
} from '@/constants';
import {ymdFullString} from '@/utils';
import {useCallback, useEffect, useState} from 'react';

import {isCancel} from '@ctrip/corp-cross-request';
import {DevTrace, getAllQuery, getCookie, getSharkValue, TraceTryCatch} from '@ctrip/corp-cross-utils';
import {PAYMENT_WAY_EVENT} from '@ctrip/corp-flight-business-h5-delivery/dist/esm/constants';
import {PayTypeRelationListV2} from '@ctrip/corp-gateway-corpflightbookservice/dist/esm/deliveryDetailsV2/interface';
import {
  RecalculateControlMixPaymentInfo,
  recalculateControlRequest,
  RecalculateControlRequestType,
} from '@ctrip/corp-gateway-corpflightbookservice4j/dist/esm/recalculateControl';
import {searchApprovalList} from '@ctrip/corp-gateway-corpfrontendbasiccommon/dist/esm/searchApprovalList';
import {
  getTravelApplicationDetail,
  GetTravelApplicationDetailRequestType,
} from '@ctrip/corp-gateway-nodecommonbusinesstravel/dist/esm/getTravelApplicationDetail';
import {
  getTravelApplicationList,
  GetTravelApplicationListRequestType,
} from '@ctrip/corp-gateway-nodecommonbusinesstravel/dist/esm/getTravelApplicationList';
import {getEarierApprove} from '@ctrip/corp-gateway-nodecommonearierapprove/dist/esm/getEarierApprove';
import {useAddListener, useEmit, useHandleEventRequest, useSubscribeModel} from '@ctrip/corphooks';

/**
 *  1: 金额申请 2: 事由申请
 */
export type IEndorsement = 1 | 2;
interface IProps {
  anchorHandler: () => void;
}

export enum EOaType {
  domestic = '1',
  international = '2',
}

export function usePostApprovalAndTravelApplicationHooks(params: IProps) {
  const baseInfoData = useSubscribeModel<FlightBookBaseInfo>(FLIGHT_BOOK_BASE_INFO_MODEL);
  const baseInputData = useSubscribeModel<FlightBookPageInputParams>(FLIGHT_BOOK_BASE_INPUT_MODEL);
  const {isIntl, pId} = baseInputData || {};
  const {
    uniqueKey,
    isEmergency,
    taOrderNo,
    taTravelPlanNo,
    requestStatus,
    tripApply,
    advanceApprove,
    preAdvanceApprove,
    multiApprovalMode,
    openRoute,
    switchMap,
    preApprovePerson,
    approvalMixPaySwitch,
    emergencyName,
    approvalListTitle,
    switchApprovalPassengerClear,
    /**
     * @deprecated
     */
    approvalNo,
    /**
     * @deprecated
     */
    approvalMainNo,
    /**
     * 前后置审批默认主单号
     */
    defaultApprovalMainNo,
    /**
     * 前后置审批默认子单号
     */
    defaultApprovalNo,
    bookForEmployeeControlCode,
  } = baseInfoData || {};

  const pleaseSelectText = getSharkValue(FLIGHT_BOOK_SHARK.travelApplicationFormItemPlaceholder);
  // 兼容老字段
  const isMice = baseInfoData?.miceFlag;
  // init已选数据 || 出差申请已关联单据初始化
  const initSelectedItem = {
    no: '',
    name: '',
    mainNo: '',
    travelList: [],
  };
  // 支付方式
  const [payType, setPayType] = useState<string | null | undefined>('');
  // 国际暂缓
  const [postpone, setPostpone] = useState<boolean>(false);
  // 列表浮层是否可见
  const [listPopupVisible, setListPopupVisible] = useState<boolean>(false);
  // 是否已选择紧急预定
  const [selectedEmergency, setSelectedEmergency] = useState<boolean>(false);
  // 已选择的item
  const [selectedItem, setSelectedItem] = useState<IPostApprovalTravelApplicationItem>(initSelectedItem);
  // 混付接口返回的值
  const [mixPayInfo, setMixPayInfo] = useState<RecalculateControlMixPaymentInfo>(null);
  // 出差申请关联的详情外显数据
  const [relatedTravelApplication, setRelatedTravelApplication] =
    useState<IPostApprovalTravelApplicationItem>(initSelectedItem);
  // 出差申请类型
  const [endorsementType, setEndorsementType] = useState<IEndorsement>();
  // 行程关联的出差申请数据
  const [travelRelatedData, setTravelRelatedData] = useState<ITravelRelatedData>(null);
  // 是否可修改
  const [canModify, setCanModify] = useState<boolean>(false);
  // 出差申请列表数据
  const [travelListData, setTravelListData] = useState(null);
  // 给组件传的默认主单号，组件会根据主单号查询对应的子单号列表
  // 不能赋值给selectedItem.mainNo是因为selectedItem.mainNo为下单参数
  const [searchApprovalNoList, setSearchApprovalNoList] = useState<string[]>([]);
  // 未选择提示话术
  const [noSelectedTip, setNoSelectedTip] = useState<string>('');

  // 审批后置选择审批单之后更新 mixPayKey 发送事件，参数参考接口interface RecalculateControlMixPaymentInfo
  const mixPayKeyEmit = useEmit(BOOK_PAGE_POSTAPPROVAL_UPDATE);
  // 提前审批或审批后置单号或紧急预定更新 发送事件，参数是 {approvalNo, isEmergency}
  const approvalEmit = useEmit(BOOK_PAGE_APPROVAL_UPDATE);
  // 提前审批后置时，选择了审批单后发事件给乘机人模块，告知是否是紧急预定
  const approvalWayChange = useEmit(BOOK_PAGE_APPROVAL_PASSENGER);
  // 监听行程关联的出差申请数据
  useAddListener(BOOK_PAGE_TRAVEL_UPDATE, (data: ITravelRelatedData) => {
    console.log('setTravelRelatedData_useAddListener', data);
    setTravelRelatedData(data);
    // 每一次选择行程，都需要重置是否紧急预定
    if (data.emergency) {
      setSelectedEmergency(true);
    } else {
      setSelectedEmergency(false);
    }
    if (data?.travelNo) {
      setSearchApprovalNoList([data?.travelNo]);
    } else {
      setSearchApprovalNoList([]);
    }
    // 需要测试 mainNo 为空的情况会不会影响到其他流程
    setSelectedItem({no: '', name: pleaseSelectText, mainNo: '', travelList: []});
  });
  // 监听支付方式更改
  useAddListener(PAYMENT_WAY_EVENT, (data: PayTypeRelationListV2) => {
    console.log('paymentWay_useAddListener', data);
    setPayType(data?.paymentWay);
  });
  // 监听国际暂缓更改
  useAddListener(BOOK_PAGE_POSTPONE_UPDATE, (data: {postpone: boolean}) => {
    console.log('postpone_useAddListener', data);
    setPostpone(data?.postpone);
  });

  // 审批初始化selectedItem
  useEffect(() => {
    // 提前审批
    if (!tripApply && advanceApprove) {
      setSelectedEmergency(!!isEmergency);
      setSelectedItem({
        no: defaultApprovalNo || approvalNo || '',
        name: defaultApprovalMainNo || approvalMainNo || approvalNo || '',
        mainNo: defaultApprovalMainNo || approvalMainNo || '',
      });
      if ((defaultApprovalNo || '') !== (approvalNo || '')) {
        DevTrace(FLIGHT_BOOK_DEV_LOG_TRACE_KEYS.o_corp_flt_order_default_approvalno_not_match, {
          defaultApprovalNo,
          approvalNo,
          functionName: 'init',
        });
      }
      approvalEmit({approvalNo: defaultApprovalNo || approvalNo, isEmergency: !!isEmergency});
      // 前置不可编辑
      setCanModify(!preAdvanceApprove);
      if (!preAdvanceApprove) {
        recalculateControl({isEmergency: !!isEmergency, approvalNo: defaultApprovalNo});
      }
      // 出差申请
    } else if (tripApply && !advanceApprove) {
      setSelectedEmergency(false);
      setSelectedItem(initSelectedItem);
      setCanModify(true);
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [
    preAdvanceApprove,
    isEmergency,
    advanceApprove,
    tripApply,
    defaultApprovalMainNo,
    defaultApprovalNo,
  ]);

  const recalculateControl = async ({isEmergency, approvalNo}: {isEmergency: boolean; approvalNo: string}) => {
    if (!isIntl) {
      await fetchRecalculateControl(isEmergency, approvalNo);
    }
  };

  const fetchApprovalList = useCallback(async () => {
    const queries = getAllQuery();
    const {mssokey} = queries;
    const cookieSSO = getCookie('mssokey');
    const params = {
      isPreposition: 1,
      oaType: isIntl ? EOaType.international : EOaType.domestic,
      ssoKey: mssokey || cookieSSO || '',
    };

    try {
      const res = await searchApprovalList(params, {
        pageName: BOOK_PAGE_NAME,
        productName: PRODUCT_NAME,
      });
      if (res && res.Response && res.Response.Approval) {
        const Approval = res.Response.Approval;
        const {mainNo, no, grayFlag} = Approval?.defaultApprovalInfo ?? {};
        if (grayFlag) {
          if (no) {
            DevTrace(FLIGHT_BOOK_DEV_LOG_TRACE_KEYS.o_corp_flt_order_default_approvalno_not_match, {
              approvalNo: no,
              defaultApprovalMainNo: '',
              functionName: 'fetchApprovalList',
            });
          }
          setSelectedItem({no: no || '', name: mainNo || '', mainNo: mainNo || ''});
          approvalEmit({approvalNo: no, isEmergency: !!isEmergency});
          if (!isIntl) {
            await fetchRecalculateControl(isEmergency, no);
          }
        }
      } else {
        DevTrace(FLIGHT_BOOK_DEV_LOG_TRACE_KEYS.FLIGHT_BOOK_API_FAILED, {
          productLine: PRODUCT_NAME,
          pageName: BOOK_PAGE_NAME,
          serviceName: 'CorpFrontendBasicCommon',
          operation: 'fetchApprovalList',
          GE: res?.GE,
          message: res?.ErrorMessage,
        });
      }
    } catch (error) {
      TraceTryCatch(error, {
        block: true,
        functionName: 'fetchApprovalList',
        productLine: PRODUCT_LINE,
        pageName: BOOK_PAGE_NAME,
      });
    }
  }, [isIntl, uniqueKey]);

  // 提前审批后置
  // 等到有uniquekey再发请求，不然回调里拿不到uniquekey
  useEffect(() => {
    // 在mice换卡需求中，H5/Online统一取defaultApprovalNo和defaultApprovalMainNo
    if (advanceApprove && !preAdvanceApprove && uniqueKey && !defaultApprovalNo) {
      fetchApprovalList();
    }
  }, [advanceApprove, preAdvanceApprove, fetchApprovalList, defaultApprovalNo, uniqueKey]);

  // 初始化监听默认审批单号，如果有默认审批单号，调recalculateControl
  useEffect(() => {
    const asyncRecalculateControl = async () => {
      if (advanceApprove && !preAdvanceApprove && defaultApprovalNo) {
        await recalculateControl({isEmergency: !!isEmergency, approvalNo: defaultApprovalNo});
      }
    };

    asyncRecalculateControl();
  }, [advanceApprove, preAdvanceApprove, defaultApprovalNo]);

  // 初始化出差申请selectedItem及外显信息
  useEffect(() => {
    if (tripApply) {
      const initData = async () => {
        if (taOrderNo) {
          if (taTravelPlanNo) {
            setSelectedItem({no: taTravelPlanNo, name: taOrderNo, mainNo: taOrderNo, travelList: []});
          } else {
            setSearchApprovalNoList([taOrderNo]);
            // setSelectedItem({ no: '', name: '', mainNo: taOrderNo, travelList: [] })
          }
        }
        await getTravelApplicationOutDetail();
      };
      initData();
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [tripApply, travelRelatedData?.tripId, travelRelatedData?.travelNo, taOrderNo, taTravelPlanNo]);

  // 审批初始化 审批后置 + mice
  // 发布兼容，后续删除
  useEffect(() => {
    if (advanceApprove && isMice && !defaultApprovalNo) {
      const initApproval = async () => {
        await fetchGetEarierApprove();
      };
      initApproval();
    }
  }, [isMice, advanceApprove, defaultApprovalNo]);

  // 选择审批后置或者新版出差申请
  const selectItemFn = async (isEmergency: boolean, data) => {
    console.log('selectItemFn_isEmergency', isEmergency);
    console.log('selectItemFn_data', data);
    if (!tripApply && switchApprovalPassengerClear) {
      // 发事件给乘机人，重刷乘机人列表
      approvalWayChange(!!isEmergency);
    }
    setNoSelectedTip('');
    setSelectedEmergency(isEmergency);
    if (data && !isEmergency) {
      setSelectedItem({
        no: data?.No || '', //出差申请的出行计划单号或者审批单号
        name: data?.mainNo || data?.No || '', //出差申请单号或者审批单号
        mainNo: data?.mainNo || '',
        travelList: [],
      });
    } else {
      if (!isEmergency) {
        if (tripApply) {
          invalidAnchor(false);
        } else {
          invalidAnchor(true);
        }
      }
      setSelectedItem(initSelectedItem);
    }
    DevTrace(FLIGHT_BOOK_DEV_LOG_TRACE_KEYS.o_corp_flt_book_postApproval_calldata, {isEmergency, data});
    // 审批后置根据审批单号判断是否支持混付
    if (advanceApprove) {
      approvalEmit({approvalNo: data?.No || '', isEmergency});
      // 国际机票没有审批单管控的需求，不要调recalculateControl，也不要更新支付配送和保险
      await recalculateControl({isEmergency, approvalNo: data?.No});
    }
    if (tripApply && !isEmergency) {
      if (openRoute) {
        if (!data?.mainNo) {
          // 反选取消状态
          return cancelTravelApplication();
        }
        await travelApplicationDetailInTripMode(data?.mainNo, true);
      } else {
        await travelApplicationDetailInSingle(data?.mainNo, data?.No);
      }
    }
  };

  const cancelTravelApplication = () => {
    setRelatedTravelApplication(initSelectedItem);
  };

  // 选择旧版出差申请
  const selectItemFnOld = async (isEmergency: boolean, data) => {
    setNoSelectedTip('');
    setSelectedEmergency(isEmergency);
    if (data && !isEmergency) {
      setSelectedItem({
        no: data?.plan?.tripPlanId || '', // 出行计划单号
        name: data?.orderNumber || '',
        mainNo: data?.orderNumber || '', // 出差申请单号
        travelList: [],
      });
    } else {
      if (!isEmergency) {
        invalidAnchor(false);
      }
      setSelectedItem(initSelectedItem);
    }
    DevTrace(FLIGHT_BOOK_DEV_LOG_TRACE_KEYS.o_corp_flt_book_oldTravelApp_calldata, {isEmergency, data});
    if (!isEmergency) {
      if (openRoute) {
        await travelApplicationDetailInTripMode(data?.orderNumber, true);
      } else {
        await travelApplicationDetailInSingle(data?.orderNumber, data?.plan?.tripPlanId);
      }
    }
  };

  // mice 不展示审批单入口，但是需要调接口 getEarierApprove，
  const fetchGetEarierApprove = async () => {
    const paramsNew = {
      pid: pId,
      uniqueKey: uniqueKey,
      idList: [],
      intl: isIntl,
    };
    try {
      const res = await getEarierApprove(paramsNew, {
        pageName: BOOK_PAGE_NAME,
        productName: PRODUCT_NAME,
      });
      if (res?.Response) {
        const miceApprovalNo = res.Response?.approveList?.[0]?.id || '';
        setSelectedItem({no: miceApprovalNo, name: miceApprovalNo});
        approvalEmit({approvalNo: miceApprovalNo, isEmergency});
      } else {
        // todo 异常处理
      }
    } catch (error) {
      if (isCancel(error)) {
        return;
      }
      TraceTryCatch(error, {
        block: true,
        functionName: 'fetchRecalculateControl',
        productLine: PRODUCT_LINE,
        pageName: BOOK_PAGE_NAME,
      });
    }
  };

  // 国内审批后置混付-选择审批单后调 recalculateControl 接口
  const fetchRecalculateControl = async (isEmergency: boolean, approvalNo: string) => {
    const paramsNew: RecalculateControlRequestType = {
      pid: pId,
      uniqueKey: uniqueKey,
      approvalNo: approvalNo || '',
      emergency: isEmergency || false,
      approvalSupportMixPay: mixPayInfo?.approvalSupportMixPay || false,
    };
    try {
      const res = await recalculateControlRequest(paramsNew, {
        pageName: BOOK_PAGE_NAME,
        productName: PRODUCT_NAME,
      });
      if (res?.Result && res?.Response) {
        const mixPayInfoData = res.Response?.mixPayInfo;
        setMixPayInfo(mixPayInfoData);
        mixPayKeyEmit(mixPayInfoData);
      } else {
        // todo 异常处理
      }
    } catch (error) {
      TraceTryCatch(error, {
        block: true,
        functionName: 'fetchRecalculateControl',
        productLine: PRODUCT_LINE,
        pageName: BOOK_PAGE_NAME,
      });
    }
  };

  /**
   * 格式化每个行程列表详情的展示文案
   */
  const formatTravelDetailDisplay = (travelItem, endorsementType): string[] => {
    let content: string[] = [];
    let rowOne: string;
    let rowTwo: string;
    let rowThree: string;
    const travelEndTimeText =
      travelItem.journalType === 2
        ? `, ${travelItem.endTime || ''}${getSharkValue(FLIGHT_BOOK_SHARK.travelApplicationReturnTrip)}`
        : '';
    const travelStartTimeText =
      travelItem.journalType === 1
        ? `${travelItem.startTime || ''}`
        : `${travelItem.startTime || ''}${getSharkValue(FLIGHT_BOOK_SHARK.travelApplicationDeparture)}`;
    switch (endorsementType) {
      // 金额
      case 1:
        rowOne = `${travelStartTimeText}${travelEndTimeText}`;
        rowTwo = `${travelItem.airline || ''}${travelItem.airline ? ' ' : ''}${travelItem.discountMsg || ''}`;
        rowThree = `${travelItem.costImplacation || ''}`;
        content = [rowOne, rowTwo, rowThree];
        break;
      // 事由
      case 2:
        {
          const departure = Array.isArray(travelItem.departure)
            ? travelItem.departure.join('、')
            : travelItem.departure;
          const arrival = Array.isArray(travelItem.arrival) ? travelItem.arrival.join('、') : travelItem.arrival;

          const departureText = departure
            ? `${departure}${getSharkValue(FLIGHT_BOOK_SHARK.travelApplicationDeparture)}`
            : '';
          const arrivalText = arrival ? `${arrival}${getSharkValue(FLIGHT_BOOK_SHARK.travelApplicationArrival)}` : '';
          const joinMark = departureText && arrivalText ? ' - ' : '';
          rowOne = `${departureText}${joinMark}${arrivalText}`;
          rowTwo = `${travelItem.remark || ''}`;
          content = [rowOne, rowTwo];
        }
        break;
      default:
        break;
    }
    return content.filter(Boolean);
  };

  /**
   * 从出差申请列表中找到关联申请单
   */
  const findRelatedApplication = (
    applicationList: IApplicationItem[],
    travelNo: string | number,
    travelPlanNo: string | number,
    endorsementType: number,
  ) => {
    const targetApplication = applicationList.find((item) => item.id === travelNo);
    if (targetApplication) {
      const targetTravel = targetApplication?.tripList?.find((ele) => ele.id === travelPlanNo);
      if (targetTravel) {
        if (!targetTravel?.startTime || !targetTravel?.endTime) {
          const travelStartTime = ymdFullString(targetTravel?.travelStartTime);
          const travelEndTime = ymdFullString(targetTravel?.travelEndTime);
          targetTravel.startTime = travelStartTime;
          targetTravel.endTime = travelEndTime;
        }
        const detailsDisplay = formatTravelDetailDisplay(targetTravel, endorsementType);
        targetApplication.travelList = [{...targetTravel, detailsDisplay}];
        return targetApplication;
      } else {
        targetApplication.travelList = [];
        return targetApplication;
      }
    }
    return null;
  };

  /**
   * 行程模式下：展示选择出差申请单回显到填写页的信息，此时只有出差申请单号，无出行计划单号
   * @param travelNo 出差申请单号
   * @param canModify 是否可更换出差申请单
   * @param mainNo change时返回的主单号
   */
  const travelApplicationDetailInTripMode = async (travelNo: string, canModify: boolean) => {
    // 行程+关联出差申请单号，填写页展示出行时段
    console.log(22222, travelNo, canModify);
    try {
      const requestParams: GetTravelApplicationDetailRequestType = {
        orderNumber: Number(travelNo),
      };
      const res = await getTravelApplicationDetail(requestParams, {
        pageName: BOOK_PAGE_NAME,
        productName: PRODUCT_NAME,
      });
      if (res?.Response) {
        const {travelDate, travelReason, tripList} = res.Response?.orderDetail || {};
        const departure = ymdFullString(travelDate?.departDate || '');
        const arrival = ymdFullString(travelDate?.returnDate || '');
        const relatedApplication: IPostApprovalTravelApplicationItem = {
          no: String(travelNo),
          name: travelReason || '',
          // 出行时段适配行程卡片展示（金额：departure，arrival，事由：startTime，endTime）
          travelList: [{departure, arrival, startTime: departure, endTime: arrival}],
        };
        setRelatedTravelApplication(relatedApplication);
        setCanModify(canModify);
        setSelectedEmergency(false);
        // ToDo 行程模式用出差申请单号调接口拿出行计划单号，但是出行计划可能有多个，不能确定传哪个，等线上（荣凤祥）确认方案再同步修改
        if (!canModify) {
          setSelectedItem({no: tripList?.[0]?.id, name: travelNo, mainNo: travelNo, travelList: []});
        }
      }
    } catch (error) {
      TraceTryCatch(error, {
        block: true,
        functionName: 'travelApplicationDetailInTripMode',
        productLine: PRODUCT_LINE,
        pageName: BOOK_PAGE_NAME,
      });
    }
  };

  /**
   * 单订单模式下：展示选择出差申请单回显到填写页的信息
   * @param travelNo 出差申请单号
   * @param taTravelPlanNo 出行计划单号
   */
  const travelApplicationDetailInSingle = async (travelNo: string, taTravelPlanNo: string) => {
    try {
      let res = null;
      const requestParams: GetTravelApplicationListRequestType = {
        travelType: openRoute ? '1' : '2', // 1: 行程 2: 单订单
        isIntl,
      };
      res = await getTravelApplicationList(requestParams, {
        pageName: BOOK_PAGE_NAME,
        productName: PRODUCT_NAME,
      });
      if (res && res.Result && res.Response) {
        setTravelListData(res.Response);
      } else {
        // todo 异常处理
        setTravelListData(null);
      }
      if (travelNo) {
        const {applicationList, endorsementType} = travelListData || res?.Response || {};
        // 设置是否是紧急预定
        // setSelectedEmergency(isEmergencyReserve)
        // 设置出差申请类型
        setEndorsementType(endorsementType);
        const relatedApplication = findRelatedApplication(applicationList, travelNo, taTravelPlanNo, endorsementType);
        // 如果travelList长度为1：关联了出行计划、不可编辑
        if (relatedApplication) {
          // 如果travelList长度为1，表示关联了出行计划，如果大于1，未关联出行计划
          const isRelatedTravelPlan = relatedApplication?.travelList?.length === 1;
          // 设置关联申请单
          if (isRelatedTravelPlan) {
            setRelatedTravelApplication(relatedApplication);
          }
          setSelectedEmergency(false);
        }
      }
    } catch (error) {
      TraceTryCatch(error, {
        block: true,
        functionName: 'travelApplicationDetailInSingle',
        productLine: PRODUCT_LINE,
        pageName: BOOK_PAGE_NAME,
      });
    }
  };

  /**
   * 初始化展示选择出差申请单回显到填写页的信息
   */
  const getTravelApplicationOutDetail = async () => {
    // 如果有关联travelNo，需要回显到填写页
    console.log(33333, openRoute, travelRelatedData);
    if (openRoute) {
      const {tripId, travelNo, emergency} = travelRelatedData || {};
      // 行程默认是紧急预定 => 不可改，不用请求出差申请列表
      if (emergency) {
        setCanModify(false);
        setSelectedEmergency(true);
        return;
      }
      // 无行程单号 => 新行程 => 走单订单常规入口逻辑
      if (!tripId || travelNo) {
        setRelatedTravelApplication(initSelectedItem);
        setCanModify(true);
        console.log(33334, initSelectedItem);
        return;
      }
      // 有行程单号 + 无关联出差申请单号 => 行程关联单关联紧急预定，则不用请求出差申请列表
      if (tripId && !travelNo) {
        setCanModify(true);
        setSelectedEmergency(true);
        return;
      }
      // 行程单关联出差申请单号, 不可改
      // if (travelNo) {
      //   await travelApplicationDetailInTripMode(travelNo, false)
      //   return
      // }
    } else {
      // 从缓存中拿已经关联的出差申请单号和出行计划号
      await travelApplicationDetailInSingle(taOrderNo, taTravelPlanNo);
    }
  };

  // 校验不通过锚点
  const invalidAnchor = (isApproval: boolean, pre?: boolean) => {
    const tips = isApproval
      ? pre
        ? getSharkValue(FLIGHT_BOOK_SHARK.noPreApproval)
        : getSharkValue(FLIGHT_BOOK_SHARK.selectPreApproval)
      : getSharkValue(FLIGHT_BOOK_SHARK.selectTravelApplication) || '';
    setNoSelectedTip(tips);
    params?.anchorHandler();
  };

  // 校验方法
  const postApprovalValidHandler = () => {
    // 不是提前审批，不是审批后置，不是出差申请 或 多审批单（不在此处选）
    if ((!preAdvanceApprove && !advanceApprove && !tripApply) || multiApprovalMode) {
      return true;
    }
    // 提前审批
    if (preAdvanceApprove) {
      if (selectedItem?.no || selectedEmergency) {
        return true;
      } else {
        invalidAnchor(true, true);
        return false;
      }
    }

    // 审批后置没有审批单号或者紧急预定时，校验不通过
    if (advanceApprove) {
      //个人支付不需管控 or 暂缓出票，验证默认通过
      if ((!preApprovePerson && payType === 'PERSON') || (isIntl && postpone)) {
        return true;
      }
      if (selectedItem?.no || selectedEmergency) {
        return true;
      } else {
        invalidAnchor(true);
        return false;
      }
    }
    // 出差申请没有出差申请单号或者紧急预定时，校验不通过
    if (tripApply) {
      if (selectedItem?.mainNo || selectedItem?.no || selectedEmergency) {
        return true;
      } else {
        invalidAnchor(false);
        return false;
      }
    }
    return false;
  };
  // 下单提交数据
  const submitData = () => {
    let orderData = {};
    const newTripApply = tripApply && switchMap?.newTripApplyFlag;
    const oldTripApply = tripApply && !switchMap?.newTripApplyFlag;
    // 审批单
    if (advanceApprove) {
      orderData = {
        isEmergency: !!selectedEmergency,
        approvalNo: selectedItem?.no,
        approvalMainNo: selectedItem?.mainNo,
        mixPayKey: mixPayInfo?.mixPayKey || '',
      };
      // 新版出差申请
    } else if (newTripApply) {
      orderData = {
        tripApplyInfo: {
          tripApplyMainNo: selectedItem.mainNo || '',
          tripApplyApprovalNo: selectedItem.no || '',
          tripApplyEmergency: !!selectedEmergency,
          mixPayKey: mixPayInfo?.mixPayKey || '',
        },
      };
      // 旧版出差申请
    } else if (oldTripApply) {
      orderData = {
        isEmergency: selectedEmergency,
        endorseNo: selectedItem?.mainNo || '', // 出差申请单号
        detailNo: String(selectedItem?.no) || '', // 出差申请的出行计划
        mixPayKey: mixPayInfo?.mixPayKey || '',
      };
    }

    return orderData;
  };
  // 下单提交数据
  const submitHandler = async (next, _, emitReq) => {
    DevTrace(FLIGHT_BOOK_DEV_LOG_TRACE_KEYS.o_corp_flt_order_submit_order_stage, {
      stage: 'get module request',
      module: 'approval',
    });
    try {
      const valid = postApprovalValidHandler();
      if (!valid) {
        emitReq?.abort({
          moduleName: 'PostApprovalAndTravelApplication',
          errorMsg: 'postApprovalAndTravelApplication validate failed',
        });
        emitReq?.hideLoading();
        return;
      }
      const data = submitData();
      DevTrace(FLIGHT_BOOK_DEV_LOG_TRACE_KEYS.o_corp_flt_book_postApproval_get_order_data, {
        tripApply,
        advanceApprove,
        preAdvanceApprove,
        ...data,
      });
      next({...data});
    } catch (error) {
      console.error('error', error);
      emitReq?.abort({
        moduleName: 'PostApprovalAndTravelApplication',
        errorMsg: 'postApprovalAndTravelApplication exception',
      });
      emitReq?.hideLoading();
      TraceTryCatch(error, {
        block: true,
        functionName: 'submitHandler',
        productLine: PRODUCT_LINE,
        pageName: BOOK_PAGE_NAME,
      });
    }
  };

  // 监听@flight/book_page_submit事件，传入回调submitHandler, rankId, 其中rankId决定各模块前端校验/收集参数的顺序
  useHandleEventRequest(BOOK_PAGE_SUBMIT, submitHandler, {rankId: SubmitRankId.postApproval});

  const popupTitle = (() => {
    if (bookForEmployeeControlCode === BookingNonEmployeeEnum.LCM) {
      return getSharkValue(FLIGHT_BOOK_SHARK.selectApply);
    } else if (tripApply) {
      return getSharkValue(FLIGHT_BOOK_SHARK.selectTravelApplication);
    } else {
      return approvalListTitle || getSharkValue(FLIGHT_BOOK_SHARK.selectPreApproval);
    }
  })();
  return {
    // 是否展示审批或出差申请模块(如果是多审批单模式，即按出行人维度选审批单，则隐藏订单维度的审批单)
    isShow: (tripApply || advanceApprove || preAdvanceApprove) && !isMice && !multiApprovalMode,
    isLoading: requestStatus !== RequestStatus.success,
    // 外显title
    title: tripApply
      ? getSharkValue(FLIGHT_BOOK_SHARK.travelApplicationFormItemLabel)
      : getSharkValue(FLIGHT_BOOK_SHARK.flightApprovalNo),
    pleaseSelectText,
    // 浮层title
    popupTitle: popupTitle,
    // 浮层title, 是否支持混付, 线上是从 getEarierApprove 取的
    popupSubTitle: approvalMixPaySwitch ? getSharkValue(FLIGHT_BOOK_SHARK.companyOpenMixPayTitle) : '',
    canModify,
    // 使用新版出差申请
    newTripApplyFlag: switchMap?.newTripApplyFlag || false,
    listPopupVisible,
    setListPopupVisible,
    tripApply,
    isIntl,
    selectedItem,
    selectItemFn,
    selectedEmergency,
    emergecyText: emergencyName || getSharkValue(FLIGHT_BOOK_SHARK.emergecy),
    openRoute,
    selectItemFnOld,
    relatedTravelApplication,
    endorsementType,
    searchApprovalNoList,
    noSelectedTip,
    bookForEmployeeControlCode,
    needNoEmployee: bookForEmployeeControlCode === BookingNonEmployeeEnum.LCM ? T_OR_F.T : T_OR_F.F,
  };
}

export function useApprovalWrapperHooks() {
  const baseInfoData = useSubscribeModel<FlightBookBaseInfo>(FLIGHT_BOOK_BASE_INFO_MODEL);
  return {
    // 如果是多审批单，则隐藏订单维度的审批单。完全不渲染，也不执行hooks
    noOrderApproval: baseInfoData?.multiApprovalMode,
  };
}
"
}
